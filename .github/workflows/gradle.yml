jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Validate gradlew integrity
      uses: gradle/wrapper-validation-action@v1
    - continue-on-error: true
      name: Cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/gradle-wrapper.properties')
          }}
        path: '~/.gradle/caches

          ~/.gradle/wrapper

          ./.gradle/loom-cache/remapped-mods

          '
    - continue-on-error: true
      name: Check lang files
      run: ./scripts/check_lang.sh
    - continue-on-error: true
      id: calculate_artifact_names
      name: Calculate artifact names
      run: '# Check is backwards because "" is falsey, which wouldn''t work for boolean
        punning

        SNAPSHOT_SUFFIX=${{ !startsWith(github.ref, ''refs/tags/release-'') && ''-SNAPSHOT''
        || '''' }}

        MC=$(awk -F ''='' ''/minecraft_version/ { print $2; }'' gradle.properties)

        BUILD=$(awk -F ''='' ''/build_number/ { print $2; }'' gradle.properties)

        echo "forge=Forge/build/libs/Botania-${MC}-${BUILD}-FORGE${SNAPSHOT_SUFFIX}.jar"
        >> "$GITHUB_OUTPUT"

        echo "fabric=Fabric/build/libs/Botania-${MC}-${BUILD}-FABRIC${SNAPSHOT_SUFFIX}.jar"
        >> "$GITHUB_OUTPUT"


        GOG_VER=$(awk -F ''='' ''/VERSION/ { print $2; }'' garden_of_glass/Makefile)

        echo "gog=garden_of_glass/gardenofglass-${GOG_VER}.jar" >> "$GITHUB_OUTPUT"

        '
    - continue-on-error: true
      name: Build GoG
      run: 'make -C garden_of_glass jar


        # This makes the jar file have uniform order and timestamps for reproducibility

        sudo apt-get install strip-nondeterminism

        strip-nondeterminism ${{ steps.calculate_artifact_names.outputs.gog }}

        '
    - continue-on-error: true
      name: Build with Gradle
      run: 'RELEASE_MODE=${{ startsWith(github.ref, ''refs/tags/release-'') && ''1''
        || ''0'' }} \

        ./gradlew pmdMain spotlessJavaCheck build

        '
    - continue-on-error: true
      if: failure()
      name: PMD report
      uses: jwgmeligmeyling/pmd-github-action@v1
      with:
        path: '**/reports/pmd/main.xml'
    - continue-on-error: true
      name: Check generated files up to date
      run: ./scripts/check_datagen.sh
    - continue-on-error: true
      name: Run GameTests (Fabric)
      run: ./gradlew :Fabric:runGameTest
    - continue-on-error: true
      name: Stop Gradle
      run: ./gradlew --stop
    - continue-on-error: true
      env:
        SIGNING_KEY: ${{ secrets.VIOLET_MOON_SIGNING_KEY }}
      if: ${{ env.SIGNING_KEY != '' }}
      name: Sign jars
      run: "echo \"${SIGNING_KEY}\" | gpg --import -\ngpg --local-user \"Violet Moon\
        \ Signing Key\" --armor \\\n  --detach-sign ${{ steps.calculate_artifact_names.outputs.forge\
        \ }}\ngpg --local-user \"Violet Moon Signing Key\" --armor \\\n  --detach-sign\
        \ ${{ steps.calculate_artifact_names.outputs.fabric }}\ngpg --local-user \"\
        Violet Moon Signing Key\" --armor \\\n  --detach-sign ${{ steps.calculate_artifact_names.outputs.gog\
        \ }}\n"
    - continue-on-error: true
      name: Archive Fabric Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Fabric
        path: '${{ steps.calculate_artifact_names.outputs.fabric }}

          ${{ steps.calculate_artifact_names.outputs.fabric }}.asc

          '
    - continue-on-error: true
      name: Archive Forge Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Forge
        path: '${{ steps.calculate_artifact_names.outputs.forge }}

          ${{ steps.calculate_artifact_names.outputs.forge }}.asc

          '
    - continue-on-error: true
      name: Archive GoG Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: GoG
        path: '${{ steps.calculate_artifact_names.outputs.gog }}

          ${{ steps.calculate_artifact_names.outputs.gog }}.asc

          '
    - continue-on-error: true
      env:
        CURSEFORGE_TOKEN: ${{ secrets.WILLIEWILLUS_CURSEFORGE_TOKEN }}
        FABRIC_JAR: ${{ steps.calculate_artifact_names.outputs.fabric }}
        FORGE_JAR: ${{ steps.calculate_artifact_names.outputs.forge }}
        GH_TOKEN: ${{ github.token }}
        GIT_REF: ${{ github.ref }}
        MODRINTH_TOKEN: ${{ secrets.WILLIEWILLUS_MODRINTH_TOKEN }}
      if: startsWith(github.ref, 'refs/tags/release-')
      name: Upload Releases
      run: 'scripts/upload_releases.sh

        '
name: Java CI
on:
  repository_dispatch:
    types: trigger-ga___gradle.yml
